services:
  db:
    container_name: db
    image: postgres:16-bullseye
    env_file:
      - ./backend/.env.production
    ports:
      - "5432:5432"
    expose:
      - "5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$PGUSER -d $$PGDATABASE"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:
      - ./backend/db-data:/var/lib/postgresql/data/
      - ./backend/db-init/custom-init.sql:/docker-entrypoint-initdb.d/custom-init.sql
    networks:
      - node-postgres
  backend:
    container_name: backend
    env_file:
      - ./backend/.env.production
    build:
      context: ./backend
    ports:
      - 5000:5000
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - node-postgres
      - node-nginx
    depends_on:
      db:
        condition: service_healthy
  nginx:
    container_name: nginx
    image: nginx:1.19.0-alpine
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "3000:80"
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - node-nginx
  frontend:
    container_name: frontend
    env_file:
      - ./frontend/.env.production
    build:
      context: ./frontend
    ports:
      - "4000:3000"
    restart: unless-stopped
    networks:
      - node-nginx

networks:
  node-postgres: {}
  node-nginx: {}
